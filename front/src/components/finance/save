<template>
    <div>
        <p>검색하기</p>
        <form @submit.prevent="searchProducts(selectedBank, selectedPeriod)">
            <!-- 은행 -->
            <select v-model="selectedBank">
                <option v-for="bank in banks" :value="bank" :key="1" >
                    {{ bank }}
                </option>
            </select>
            <!-- 예치기간 -->
            <select v-model="selectedPeriod">
                <option v-for="period in periods" :value="period" :key="1">
                    {{ period }}
                </option>
            </select>

            <input type="submit" value="확인">
        </form>
    </div>
    <div>
        <table class="table table-striped">
            <thead>
                <tr class="table-primary">
                <th scope="col">금융상품명</th>
                <th scope="col">담당은행</th>
                <th scope="col"> 6개월 / 저축금리</th>
                <th scope="col"> 12개월 / 저축금리</th>
                <th scope="col"> 24개월 / 저축금리</th>
                <th scope="col"> 36개월 / 저축금리</th>
                </tr>
            </thead>
            <tbody v-for="product in products" :key="product.fin_prdt_cd">
                <tr @click="rate">
                    <td>{{ product.fin_prdt_nm }}</td>
                    <td>{{ product.kor_co_nm }}</td>
                    <td>{{ rates[0] }}</td>
                    <td>{{ rates[1] }}</td>
                    <td>{{ rates[2] }}</td>
                    <td>{{ rates[3] }}</td>

                </tr>
            </tbody>
        </table>
    </div>
    <button @click="log">gd</button>
</template>

<script setup>
import { useCounterStore } from '@/stores/counter';
import { ref, computed } from 'vue';

const log = ()=>{
    console.log(products.value[0].options.intr_rate)
    console.log(products.value)}

const store = useCounterStore();

const products = ref(store.financeSavingsProducts)

const banks = ['국민은행', '부산은행', '대구은행', '광주은행', '제주은행', '전북은행']
const periods = ['6개월', '12개월', '24개월, 36개월']

const selectedBank = ref(null);
const selectedPeriod = ref(null);


const searchProducts = (selectedBank, selectedPeriod) => {
    products.value = store.financeSavingsProducts
    .filter(product =>
    (selectedBank === null || product.kor_co_nm === selectedBank) &&
    (selectedPeriod === null || product.options.some(option => option.save_trm === `${selectedPeriod}개월`))
    );
};

const rates = ref([])
const rate = () => {
    rates.value = options.reduce((acc,cur)=>{
        if (cur.save_trm === '6'){
            acc[0] = cur.intr_rate 
        } else if ( cur.save_trm === '12'){
            acc[1] = cur.intr_rate
        } else if ( cur.save_trm === '24'){
            acc[2] = cur.intr_rate
        } else if ( cur.save_trm === '36'){
            acc[3] = cur.intr_rate
        }
        return acc
    }, ['-','-','-','-'])
}


</script>


<style scoped>

</style>
